import{_ as i,b as a,k as n,o as e}from"./app-oiS3pDlr.js";const t={};function p(l,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><p>自从用过一次<code>mongoose</code>，我就再也忘不掉它了。<code>mongoose</code>是<code>node.js</code>中基于<code>mongoDB</code>驱动封装的模块。提供了模型的接口，可以高效地创建集合的数据校验，一定程度上可以避免数据的结构问题。</p><p>在<code>mongodb</code>中有集合的概念，相当于是<code>sql</code>中的表。在<code>mongoose</code>中将集合进一步抽象成了一个模型，这个模型可以进行集合的校验，并在集合内添加数据。</p><h2 id="_2-连接客户端" tabindex="-1"><a class="header-anchor" href="#_2-连接客户端"><span>2. 连接客户端</span></a></h2><p>在mongoose中可以这样连接数据库：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">mongoose</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">require</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">mongoose</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">导入mongoose模块</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">mongoose</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">connect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">mongodb://localhost/test</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">连接数据库，默认端口可省略</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">mongoose</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">connection</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">once</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">open</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">数据库连接成功</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">内置接口，在连接时执行回调函数</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">mongoose</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">connection</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">once</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">close</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">数据库已断开</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">mongoose不会自己关闭数据库，除非项目停止或服务器关闭，否则一般不会断开。</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">mongoose</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">disconnect</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">使用本方法可以手动断开数据库连接（一般不用）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const k=i(t,[["render",p],["__file","index.html.vue"]]),o=JSON.parse('{"path":"/demo/iyyihe7l/","title":"简介","lang":"zh-CN","frontmatter":{"title":"简介","createTime":"2025/03/26 18:51:47","permalink":"/demo/iyyihe7l/","description":"1. 简介 自从用过一次mongoose，我就再也忘不掉它了。mongoose是node.js中基于mongoDB驱动封装的模块。提供了模型的接口，可以高效地创建集合的数据校验，一定程度上可以避免数据的结构问题。 在mongodb中有集合的概念，相当于是sql中的表。在mongoose中将集合进一步抽象成了一个模型，这个模型可以进行集合的校验，并在集合...","head":[["meta",{"property":"og:url","content":"https://shenying.online/demo/iyyihe7l/"}],["meta",{"property":"og:site_name","content":"Sy_blogSite"}],["meta",{"property":"og:title","content":"简介"}],["meta",{"property":"og:description","content":"1. 简介 自从用过一次mongoose，我就再也忘不掉它了。mongoose是node.js中基于mongoDB驱动封装的模块。提供了模型的接口，可以高效地创建集合的数据校验，一定程度上可以避免数据的结构问题。 在mongodb中有集合的概念，相当于是sql中的表。在mongoose中将集合进一步抽象成了一个模型，这个模型可以进行集合的校验，并在集合..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-17T16:58:04.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-17T16:58:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-17T16:58:04.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":0.9,"words":271},"git":{"updatedTime":1744909084000,"contributors":[{"name":"CCCCOOH","username":"CCCCOOH","email":"c3156298376@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/CCCCOOH?v=4","url":"https://github.com/CCCCOOH"},{"name":"sy","username":"sy","email":"c3156298376@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sy?v=4","url":"https://github.com/sy"}]},"autoDesc":true,"filePathRelative":"notes/demo/11.mongoose/1.简介.md"}');export{k as comp,o as data};
