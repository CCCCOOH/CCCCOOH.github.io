import{_ as p,b as e,f as s,k as n,o as c}from"./app-oiS3pDlr.js";const i={};function t(l,a){return c(),e("div",null,a[0]||(a[0]=[s("p",null,"自从使用了Hexo写博客后，加上最常用的电脑逐渐变成了Mac。两者在一起迸发出的化学反应导致我使用终端的频率不断增加，甚至于现在有了想要抛弃VsCode转向Vim的想法。",-1),s("p",null,"今天给zsh增加了美化和插件，还发明了一个很高效的Hexo工作流，这里就来说一下。",-1),s("h1",{id:"二、美化",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#二、美化"},[s("span",null,"二、美化")])],-1),s("p",null,"关于zsh的美化，网上已经有大量的教程了，本文不单独赘述。这里把我看到的讲的很好的教程贴出来：",-1),s("p",null,"首先是Youtube上看到的关于Mac上终端美化的教程（包括了VSCode终端）：",-1),s("iframe",{align:"center",width:"560",height:"315",src:"https://www.youtube.com/embed/CF1tMjvHDRA?si=GSicTCAlmAMQNFiw",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:""},null,-1),n(`<p>这个教程讲的非常好，包括其中的命令也单独地写了一篇文章，推荐去看一看。做完后你的Mac终端就会变得和我一样<strong>beautiful</strong>：</p><p><img src="https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/截屏2025-02-16 11.21.45.png" alt="截屏2025-02-16 11.21.45"></p><blockquote><p>不知道为什么我的mac截图有时候会出现bug，不知道是M1老了还是什么原因，这张图我截了三遍右下角才出来，下面还卡出来这么个东西怎么都去不掉。</p></blockquote><img src="https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/截屏2025-02-16 11.23.41.png" alt="截屏2025-02-16 11.23.41" style="zoom:50%;"><h1 id="三、hexo工作流" tabindex="-1"><a class="header-anchor" href="#三、hexo工作流"><span>三、Hexo工作流</span></a></h1><p>个人发现了一种很高效的Hexo工作流，可以让你终端起手并且不用麻烦的cd。</p><p>首先跟这上面的Youtube教程做完后安装好了<code>oh-my-zsh</code>这个zsh的插件，在你的<strong>zshrc</strong>的配置文件中要有这样一行：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">plugins</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">z</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">wd</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这是插件的列表，里面的<code>z wd</code>是两个插件，z用来进入常用目录，wd用来添加收藏目录。</p><p>直接<code>z</code>可以提示常用的目录，并用<code>z menu</code>进入这个menu目录。</p><p>进入你常用的目录后，<code>wd add</code>可以将其添加到你的wd收藏夹，在任何位置使用<code>wd xxx</code>就可秒进这个目录。再也不用<code>cd ll cd ll</code>疯狂循环了。<code>wd list</code>可以列出收藏目录列表，<code>wd rm</code>移除收藏目录。</p><p>完成这一切后，我们进入到<code>hexo</code>的<code>_posts</code>博客目录下，进去<code>wd ad</code>。然后<code>_posts</code>就能随时用<code>wd _posts</code>进入了。</p><p>这样就完成了工作流中重要的一步。然后我们<code>vim bash_profile</code>，添加一个自定义的函数：</p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">funciton</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">typora</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">open</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">-a</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">typora</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$1</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解读一下，这里的open -a typora会打开typora编辑器，如果<code>open -a typora 你好.md</code>就会用typora打开这个markdown文件。这里的<code>$1</code>是一个站位符，相当于函数的传参。</p><p>完成之后我们<code>wd</code>进入到<code>_posts</code>目录，然后执行<code>typora xxx.md</code>就可以打开你的<code>xxx.md</code>这篇文章了。</p><p>搭配上mac的快捷键<code>command+space</code>，我们就可以开始打连招了：</p><p><code>command+space</code>切出聚焦搜索，搜索<code>ter</code>跳出终端回车，<code>wd _posts</code>进入文章目录，<code>ll -t</code>按照时间排序并列出文章，<code>typora xxx.md</code>用typora打开文章。</p><p>发现没有，全程不使用鼠标一气呵成。我们甚至可以进一步包装成我们想要的函数！不过考虑到不在目录没有提示的原因就不进一步包装了。</p><p>由于我才用了Gitactions来自动化Hexo文章，我们还可以在工作流中加上最后的点睛之笔，也就是自动git推送的包装。</p><p>我们<code>vim ~/.gitconfig</code>，添加函数：</p><p><img src="https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/截屏2025-02-16 11.41.53.png" alt="截屏2025-02-16 11.41.53"></p><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pushall</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">=</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">!f()</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">git</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">add</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&amp;&amp;</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">git</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">commit</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">-m</span><span class="space"> </span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">$1</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">\\&quot;</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">&amp;&amp;</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">git</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">push</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">origin</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">main;</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">};</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">f</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>有了最这个包装，就能将平时一直用的<code>git add . &amp;&amp; git commit -m &quot;xxx&quot; &amp;&amp; git push origin main</code>用一句简单的语法代替。</p><p>在写完文章后，我们直接<code>wd</code>到Hexo到根目录下，然后<code>git pushall &quot;写了一篇新的✍️&quot;</code>就能直接推送了，并且由于我们配置了Gitaciton，github会自动将源代码推送后再次构建博客的静态页面，优雅...实在是优雅。</p><h1 id="四、总结" tabindex="-1"><a class="header-anchor" href="#四、总结"><span>四、总结</span></a></h1><p>经过一段时间的体验我发现，不是终端不好用，不是vim不好用，也不是Hexo不好用。如果你觉得你现在的工作流很繁琐，有时候多在自己身上找找原因。是不是菜？如果菜，就多练。很多你认为很麻烦的操作在一些奇技淫巧后可能会突然豁然开朗。</p>`,27)]))}const d=p(i,[["render",t],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/article/rxw8b0hx/","title":"mac终端工作流优化方案","lang":"zh-CN","frontmatter":{"title":"mac终端工作流优化方案","createTime":"2025/02/23 21:46:30","permalink":"/article/rxw8b0hx/","description":"自从使用了Hexo写博客后，加上最常用的电脑逐渐变成了Mac。两者在一起迸发出的化学反应导致我使用终端的频率不断增加，甚至于现在有了想要抛弃VsCode转向Vim的想法。 今天给zsh增加了美化和插件，还发明了一个很高效的Hexo工作流，这里就来说一下。 二、美化 关于zsh的美化，网上已经有大量的教程了，本文不单独赘述。这里把我看到的讲的很好的教程贴...","head":[["meta",{"property":"og:url","content":"https://shenying.online/article/rxw8b0hx/"}],["meta",{"property":"og:site_name","content":"Sy_blogSite"}],["meta",{"property":"og:title","content":"mac终端工作流优化方案"}],["meta",{"property":"og:description","content":"自从使用了Hexo写博客后，加上最常用的电脑逐渐变成了Mac。两者在一起迸发出的化学反应导致我使用终端的频率不断增加，甚至于现在有了想要抛弃VsCode转向Vim的想法。 今天给zsh增加了美化和插件，还发明了一个很高效的Hexo工作流，这里就来说一下。 二、美化 关于zsh的美化，网上已经有大量的教程了，本文不单独赘述。这里把我看到的讲的很好的教程贴..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2025-02-16%2011.21.45.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-25T16:33:29.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-25T16:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mac终端工作流优化方案\\",\\"image\\":[\\"https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2025-02-16%2011.21.45.png\\",\\"https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/%E6%88%AA%E5%B1%8F2025-02-16%2011.41.53.png\\"],\\"dateModified\\":\\"2025-02-25T16:33:29.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":3.95,"words":1185},"git":{"updatedTime":1740501209000,"contributors":[{"name":"sy","username":"sy","email":"c3156298376@163.com","commits":4,"avatar":"https://avatars.githubusercontent.com/sy?v=4","url":"https://github.com/sy"},{"name":"CCCCOOH","username":"CCCCOOH","email":"c3156298376@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/CCCCOOH?v=4","url":"https://github.com/CCCCOOH"}]},"autoDesc":true,"filePathRelative":"WorkFlow/mac终端工作流优化计划.md","categoryList":[{"id":"9587ef","sort":10004,"name":"WorkFlow"}]}');export{d as comp,h as data};
