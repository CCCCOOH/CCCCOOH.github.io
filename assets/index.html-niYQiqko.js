import{_ as i,b as a,k as e,o as t}from"./app-oiS3pDlr.js";const n={};function l(p,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h2 id="_1-models" tabindex="-1"><a class="header-anchor" href="#_1-models"><span>1. Models</span></a></h2><p>上一篇笔记讲到了mongoose的基本用法，本次来讲一下o<code>Model</code>中的一些方法怎么用。</p><p>其实，有了Model我们就可以对数据库进行增删改查的操作了。</p><p>对于Model的方法，我们可以通过查阅官方的API文档来获得最新和最全面的了解： <a href="https://mongoosejs.com/docs/api/model.html" target="_blank" rel="noopener noreferrer">官方文档API</a></p><p><img src="https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/20250326194830.png" alt="20250326194830"></p><p>这里讲一些看文档需要注意的点。<code>Model.xxx</code>风格的API表示Model构造函数的方法，可以用于创建对象。</p><p><code>Model#xxx</code>风格的API表示Model创建的对象调用的方法，也就是文档对象调用的方法，当然我发现官方现在好像是这样写了：<code>Object.prototype.xxx()</code>。</p><p>这里讲几个常用的API，自己去官方文档取经吧：</p><ul><li><code>Model.find()</code></li><li><code>Model.create()</code></li><li><code>Model.findOne()</code></li></ul><p>实际上，关于<code>find</code>的API就不少，实际使用还需自己根据情况来决定：</p><p><img src="https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/20250326195709.png" alt="20250326195709"></p><h2 id="_2-document" tabindex="-1"><a class="header-anchor" href="#_2-document"><span>2. Document</span></a></h2><h3 id="_2-1-添加" tabindex="-1"><a class="header-anchor" href="#_2-1-添加"><span>2.1 添加</span></a></h3><p><code>Document</code>是<code>Model</code>的一个示例，通过<code>Model</code>查询到的结果都是<code>Document</code>。</p><p>我们其实可以直接创建一个<code>Document</code>（文档对象）其实就是最开始我说的官方推荐的写法：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">student</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">new</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">StuModel</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Sy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">18</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将这个文档对象打印出来就是：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;Sy&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">age</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">15</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">gender</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;male&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">address</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;XJUFE&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">_id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">new</span><span class="space"> </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">ObjectId(&#39;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">67e3</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">ecde</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">490</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">511</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">fb</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">8</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">c</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">53</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">cd</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">&#39;)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很容易发现，此时文档并没有被插入到数据库，仅仅是放到了内存中。</p><p>我们来讲他插入到数据库中(<code>document#save()</code>)：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">docs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">save</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里讲一下在我的Node.js项目中经常突然乍现的一个Bug：在运行项目后有时会突然报错</p><div class="language-sh line-numbers-mode" data-ext="sh" data-title="sh"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ReferenceError:</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">require</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">is</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">not</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">defined</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查了一下是因为<code>node</code>更新的原因，现在默认要求用<code>import</code>语法，如果还是想要用<code>require</code>就需要：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">createRequire</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span class="space"> </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">module</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">require</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createRequire</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">meta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>所以在保存文件时有两种方法：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">docs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">save</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Model</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">create</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-修改" tabindex="-1"><a class="header-anchor" href="#_2-2-修改"><span>2.2 修改</span></a></h3><p>修改docs也很简单，第一种方法当然是官方的<code>API</code>方法。</p><p>但其实也可以通过<code>.</code>分隔符来修改文档的属性：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">docs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">name</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Syyyo900</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">await</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">docs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">save</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-get和set" tabindex="-1"><a class="header-anchor" href="#_2-3-get和set"><span>2.3 get和set</span></a></h3><p>文档提供了一些很快捷的方法来直接得到文档的内容：</p><ul><li><code>doc.get(&#39;age&#39;, String)</code> 获取年龄并将数据转为字符串类型，第二个参数可选</li></ul><p>文档还提供了<code>set</code>方法，可以快速修改文档的内容，有多种写法，可以<a href="https://mongoosejs.com/docs/api/document.html#Document.prototype.set()" target="_blank" rel="noopener noreferrer">参考API文档</a>。</p><h3 id="_2-4-其他" tabindex="-1"><a class="header-anchor" href="#_2-4-其他"><span>2.4 其他</span></a></h3><p>文档有一个<code>doc.toJSON()</code>方法，可以将该文档转为<code>JSON</code>对象。</p><p>用<code>doc.toObject()</code>可以让文档变成一个普通的<code>Object</code>对象，但是会让所有文档的方法失效。</p><p>所以，只有在特殊情况下才会使用，比如需要删除文档中的敏感数据，想要调用<code>delete docs.address</code>来隐藏地址，就只能通过该方法来实现。</p>`,39)]))}const d=i(n,[["render",l],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/demo/vqh5zjut/","title":"Model方法","lang":"zh-CN","frontmatter":{"title":"Model方法","createTime":"2025/03/26 19:46:13","permalink":"/demo/vqh5zjut/","description":"1. Models 上一篇笔记讲到了mongoose的基本用法，本次来讲一下oModel中的一些方法怎么用。 其实，有了Model我们就可以对数据库进行增删改查的操作了。 对于Model的方法，我们可以通过查阅官方的API文档来获得最新和最全面的了解： 官方文档API 20250326194830 这里讲一些看文档需要注意的点。Model.xxx风格的...","head":[["meta",{"property":"og:url","content":"https://shenying.online/demo/vqh5zjut/"}],["meta",{"property":"og:site_name","content":"Sy_blogSite"}],["meta",{"property":"og:title","content":"Model方法"}],["meta",{"property":"og:description","content":"1. Models 上一篇笔记讲到了mongoose的基本用法，本次来讲一下oModel中的一些方法怎么用。 其实，有了Model我们就可以对数据库进行增删改查的操作了。 对于Model的方法，我们可以通过查阅官方的API文档来获得最新和最全面的了解： 官方文档API 20250326194830 这里讲一些看文档需要注意的点。Model.xxx风格的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/20250326194830.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-17T16:58:04.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-17T16:58:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Model方法\\",\\"image\\":[\\"https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/20250326194830.png\\",\\"https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/20250326195709.png\\"],\\"dateModified\\":\\"2025-04-17T16:58:04.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":2.42,"words":726},"git":{"updatedTime":1744909084000,"contributors":[{"name":"CCCCOOH","username":"CCCCOOH","email":"c3156298376@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/CCCCOOH?v=4","url":"https://github.com/CCCCOOH"},{"name":"sy","username":"sy","email":"c3156298376@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sy?v=4","url":"https://github.com/sy"}]},"autoDesc":true,"filePathRelative":"notes/demo/11.mongoose/3.阅读官方文档.md"}');export{d as comp,c as data};
