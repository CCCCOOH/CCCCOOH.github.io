import{_ as a,b as n,k as i,o as e}from"./app-oiS3pDlr.js";const t={};function p(l,s){return e(),n("div",null,s[0]||(s[0]=[i(`<h2 id="一、介绍" tabindex="-1"><a class="header-anchor" href="#一、介绍"><span>一、介绍</span></a></h2><p><code>MongoDb</code>是文档存储结构的数据库，与传统的SQL数据库有所不同。这是一开始学习<code>Mongodb</code>给我的印象。</p><p>传统的Sql数据库中有数据库、表、记录这三个层次的概念，映射到<code>MongoDb</code>中：数据库就是一个<code>Connection</code>连接，表则是一个<code>Collection</code>集合，集合或者说表中的每一个记录在<code>Mongodb</code>中叫做一个个的文档。</p><p>初步学习下来，<code>Mongodb</code>的集合像是一个存储<code>Json</code>格式的容器，似乎非常贴合web请求的<code>Json</code>格式，让前端开发者旋转。</p><h2 id="二、开始mongo" tabindex="-1"><a class="header-anchor" href="#二、开始mongo"><span>二、开始Mongo</span></a></h2><h3 id="_2-1-添加文档-创建集合" tabindex="-1"><a class="header-anchor" href="#_2-1-添加文档-创建集合"><span>2.1 添加文档/创建集合</span></a></h3><p>下载部署完成 <code>Mongodb</code> 后，可以通过如下命令来创建一个集合：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>db.postCollection.insertOne({</span></span>
<span class="line"><span>title:</span><span class="space"> </span><span>&quot;mongodb</span><span class="space"> </span><span>入门教程&quot;,</span></span>
<span class="line"><span>author:</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="tab">	</span><span>name:</span><span class="space"> </span><span>&quot;Sy&quot;,</span></span>
<span class="line"><span class="tab">	</span><span>avatar:</span><span class="space"> </span><span>&quot;https://shenying.online&quot;</span></span>
<span class="line"><span>},</span></span>
<span class="line"><span>createdAt:</span><span class="space"> </span><span>&quot;2025-3-25&quot;,</span></span>
<span class="line"><span>content:</span><span class="space"> </span><span>&quot;Mongodb</span><span class="space"> </span><span>是文档存储结构的数据库&quot;,</span></span>
<span class="line"><span>comments:</span><span class="space"> </span><span>[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span>user:</span><span class="space"> </span><span>&quot;小明&quot;,</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span>comment:</span><span class="space"> </span><span>&quot;真不错&quot;</span></span>
<span class="line"><span class="tab">	</span><span>},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span>user:</span><span class="space"> </span><span>&quot;toby&quot;,</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span>comment:</span><span class="space"> </span><span>&quot;wow!&quot;</span></span>
<span class="line"><span class="tab">	</span><span>}</span></span>
<span class="line"><span>]</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的<code>postCollection</code>是我们当前创建的集合的名字，相当于在<code>sql</code>中创建了一张名为<code>postCollection</code>的表。</p><blockquote><p>实际上，<code>insertOne</code>是用来在集合中添加文档数据的，但是因为没有该集合，所以<code>mongoDb</code>会自动创建这个名字的集合并插入数据，完成API的功能。</p></blockquote><p>你也可以用同样的方式创建一张学生表（在<code>mongodb</code>中尽量叫他集合，下面也是如此）：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>db.Students.insertOne({内容省略...})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-2-查询集合数据" tabindex="-1"><a class="header-anchor" href="#_2-2-查询集合数据"><span>2.2 查询集合数据</span></a></h3><ol><li>查询集合的全部文档</li></ol><p>要查询集合的所有元素可以使用<code>db.集合名.find({})</code>方法，不传递空对象则默认传递空对象，效果为查询集合的所有文档。</p><ol start="2"><li>带条件的集合文档查询</li></ol><p>以一张学生表为例，假设每一个学生文档有如下属性：<code>name</code>，<code>age</code>，<code>sex</code>，如果要查询满足姓名为<code>sy</code>的学生，可以这样查：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>db.Students.find({name:</span><span class="space"> </span><span>&#39;sy&#39;})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意这里的<code>Students</code>是学生集合的名字。</p><ol start="3"><li>查询嵌套的文档结构：</li></ol><p>假如文档的结构是这样的：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">mongodb</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">入门教程</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">author</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Sy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">avatar</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://shenying.online</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">createdAt</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">2025-3-25</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">content</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Mongodb</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">是文档存储结构的数据库</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">comments</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">user</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">小明</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">comment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">真不错</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">user</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">toby</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="tab">	</span><span class="tab">	</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">comment</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">wow!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span class="tab">	</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想要按照这里<code>author.name</code>这个二级属性来进行条件查询就需要这样写：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>db.postCollection.find({&quot;author.name&quot;:</span><span class="space"> </span><span>&quot;Sy&quot;})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>注意这里的传递键名需要用双引号包裹，有所不同。</p></blockquote><h3 id="_2-3-更新集合数据" tabindex="-1"><a class="header-anchor" href="#_2-3-更新集合数据"><span>2.3 更新集合数据</span></a></h3><p>更新数据和查询数据语法类似，存在两中方法：</p><ul><li><code>updateOne()</code> 仅修改一条数据</li><li><code>updateMany()</code> 修改所有满足查询条件数据</li></ul><p>他们都接受两个参数，依次是：1. <strong>查询修改的条件</strong> 2. <strong>要修改的属性</strong></p><p>直接用之前的修改方法会出现报错：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>db.user.updateOne({name:</span><span class="space"> </span><span>&quot;Sy&quot;},</span><span class="space"> </span><span>{name:</span><span class="space"> </span><span>&quot;谌y&quot;})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/image-20250325212710634.png" alt="image-20250325212710634"></p><p>从这里可以得知，MongoDb中修改数据需要专门的操作符语法。</p><ol><li><code>$set</code></li></ol><p>在修改的属性参数最外层再包一层大括号，并将<code>$set</code>键所对应的值设置为<code>{name: &quot;Syyyy&quot;, age: 19...}</code>表示要修改<code>$set</code>所对应的所有属性。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>db.user.updateMany({},</span><span class="space"> </span><span>{$set:</span><span class="space"> </span><span>{name:</span><span class="space"> </span><span>&#39;kkk&#39;}})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>如果不这样做，<code>Mongodb</code> 就无法保证唯一性，请问你是只修改<code>name</code>还是要将这个文档修改为<code>{ name: xxx }</code>并舍去其他的键呢？</p></blockquote><h3 id="_2-3-删除集合数据" tabindex="-1"><a class="header-anchor" href="#_2-3-删除集合数据"><span>2.3 删除集合数据</span></a></h3><p>与更新类似，删除数据根据数量也有两种写法：</p><ul><li><code>deleteOne()</code> 删除一条数据</li><li><code>deleteMany()</code> 删除所有满足查询条件数据</li></ul><p>语法很简单：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>db.user.delete({</span><span class="space"> </span><span>_id:</span><span class="space"> </span><span>ObjectId(&#39;67e2ae7c7da85b2443b61a2a&#39;)</span><span class="space"> </span><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里的<code>_id</code>是<code>MongoDb</code>在创建文档时自动为我们生成的唯一标识，帮我们省去了自己后端使用雪花算法、<code>uuid</code>生成标识的时间。</p><h2 id="三、总结" tabindex="-1"><a class="header-anchor" href="#三、总结"><span>三、总结</span></a></h2><p>经过一番使用，可以看出MongoDb有一些比较特别的地方。</p><p>首先是性能方面，MongoDb适用于性能要求很高但是数据一致性要求不高的应用中。因为创建集合、数据分片过于方便，这样会导致很多数据不会保持相同的文档结构。</p><p>因为其操作语法和<code>JavaScript</code>非常接近，所以用 JS 创建的应用可以首选 MongoDb 作为数据库存储引擎。</p>`,47)]))}const d=a(t,[["render",p],["__file","index.html.vue"]]),o=JSON.parse('{"path":"/demo/0vwlcvyr/","title":"快速开始","lang":"zh-CN","frontmatter":{"title":"快速开始","createTime":"2025/03/25 21:01:22","permalink":"/demo/0vwlcvyr/","description":"一、介绍 MongoDb是文档存储结构的数据库，与传统的SQL数据库有所不同。这是一开始学习Mongodb给我的印象。 传统的Sql数据库中有数据库、表、记录这三个层次的概念，映射到MongoDb中：数据库就是一个Connection连接，表则是一个Collection集合，集合或者说表中的每一个记录在Mongodb中叫做一个个的文档。 初步学习下来，...","head":[["meta",{"property":"og:url","content":"https://shenying.online/demo/0vwlcvyr/"}],["meta",{"property":"og:site_name","content":"Sy_blogSite"}],["meta",{"property":"og:title","content":"快速开始"}],["meta",{"property":"og:description","content":"一、介绍 MongoDb是文档存储结构的数据库，与传统的SQL数据库有所不同。这是一开始学习Mongodb给我的印象。 传统的Sql数据库中有数据库、表、记录这三个层次的概念，映射到MongoDb中：数据库就是一个Connection连接，表则是一个Collection集合，集合或者说表中的每一个记录在Mongodb中叫做一个个的文档。 初步学习下来，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/image-20250325212710634.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-17T16:58:04.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-17T16:58:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"快速开始\\",\\"image\\":[\\"https://ccccooh.oss-cn-hangzhou.aliyuncs.com/img/image-20250325212710634.png\\"],\\"dateModified\\":\\"2025-04-17T16:58:04.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":3.59,"words":1076},"git":{"updatedTime":1744909084000,"contributors":[{"name":"CCCCOOH","username":"CCCCOOH","email":"c3156298376@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/CCCCOOH?v=4","url":"https://github.com/CCCCOOH"},{"name":"sy","username":"sy","email":"c3156298376@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sy?v=4","url":"https://github.com/sy"}]},"autoDesc":true,"filePathRelative":"notes/demo/10.Mongodb/1.快速开始.md"}');export{d as comp,o as data};
